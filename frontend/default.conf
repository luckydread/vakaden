# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name vakaden.com www.vakaden.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

   location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name vakaden.com www.vakaden.com;

    ssl_certificate /etc/letsencrypt/live/vakaden.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vakaden.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/vakaden.com/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
		
    root /usr/share/nginx/html;  # path to your frontend build
    index index.html;
    # Frontend
    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API
    location /api/ {
        proxy_pass http://api:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

