name: CI and Deploy

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: registry.digitalocean.com/vakaden
  APP_IMAGE_NAME: app  # Single repository for both API & frontend

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        run: doctl registry login

      - name: Get short commit SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

      - name: Build API image
        run: docker build -t $REGISTRY/$APP_IMAGE_NAME:api-${SHORT_SHA} -f ./api/Dockerfile ./api

      - name: Build Frontend image
        run: docker build -t $REGISTRY/$APP_IMAGE_NAME:frontend-${SHORT_SHA} -f ./frontend/Dockerfile ./frontend

      - name: Push API image
        run: docker push $REGISTRY/$APP_IMAGE_NAME:api-${SHORT_SHA}

      - name: Push Frontend image
        run: docker push $REGISTRY/$APP_IMAGE_NAME:frontend-${SHORT_SHA}

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on droplet via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          script: |
            REGISTRY=${{ env.REGISTRY }}
            APP_IMAGE_NAME=${{ env.APP_IMAGE_NAME }}
            VERSION=$(echo $GITHUB_SHA | head -c7)

            cd ~/vakaden

            # Update environment file for docker-compose
            echo "API_IMAGE=$REGISTRY/$APP_IMAGE_NAME:api-$VERSION" > .env
            echo "FRONTEND_IMAGE=$REGISTRY/$APP_IMAGE_NAME:frontend-$VERSION" >> .env

            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml run --rm api python manage.py migrate
            docker-compose -f docker-compose.prod.yml up -d --remove-orphans

            timeout: 600

            echo "Deployed successfully"
