name: Build and Push Images

on:
  push:
    branches: [ main ]

env:
  REGISTRY: registry.digitalocean.com/vakaden
  APP_IMAGE_NAME: app

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set version from commit SHA
        id: set_version
        run: echo "version=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_OUTPUT

      - name: Log in to DigitalOcean Container Registry
        run: echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | docker login $REGISTRY -u docker --password-stdin
        env:
          REGISTRY: registry.digitalocean.com/vakaden
        
      - name: Delete all tags from single repo
        run: |
          IMAGE_NAME="registry.digitalocean.com/vakaden"
          if [ ! -z "$(doctl registry repository list --format Name --no-header | grep "^$IMAGE_NAME$")" ]; then
            for tag in $(doctl registry repository list-tags $IMAGE_NAME --format Tag --no-header); do
              echo "Deleting $IMAGE_NAME:$tag"
              doctl registry repository delete-tag $IMAGE_NAME $tag -f
            done
          else
            echo "Repository $IMAGE_NAME not found."
          fi
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build and push API
        run: |
          docker build -t $REGISTRY/$APP_IMAGE_NAME:api-${{ steps.set_version.outputs.version }} -f ./api/Dockerfile ./api
          docker push $REGISTRY/$APP_IMAGE_NAME:api-${{ steps.set_version.outputs.version }}

      - name: Build and push Frontend
        run: |
          docker build -t $REGISTRY/$APP_IMAGE_NAME:frontend-${{ steps.set_version.outputs.version }} -f ./frontend/Dockerfile ./frontend
          docker push $REGISTRY/$APP_IMAGE_NAME:frontend-${{ steps.set_version.outputs.version }}
