name: Build and Push API + Frontend

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

env:
  REGISTRY: "registry.digitalocean.com/vakaden"
  API_IMAGE_NAME: "app-api"
  FRONTEND_IMAGE_NAME: "app-frontend"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Delete old API images
        run: |
          if [ ! -z "$(doctl registry repository list --format Name --no-header | grep ^$API_IMAGE_NAME$)" ]; then
            for digest in $(doctl registry repository list-tags $API_IMAGE_NAME --format Digest --no-header); do
              echo "Deleting $API_IMAGE_NAME@$digest"
              doctl registry repository delete-manifest $API_IMAGE_NAME $digest -f
            done
          fi

      - name: Delete old Frontend images
        run: |
          if [ ! -z "$(doctl registry repository list --format Name --no-header | grep ^$FRONTEND_IMAGE_NAME$)" ]; then
            for digest in $(doctl registry repository list-tags $FRONTEND_IMAGE_NAME --format Digest --no-header); do
              echo "Deleting $FRONTEND_IMAGE_NAME@$digest"
              doctl registry repository delete-manifest $FRONTEND_IMAGE_NAME $digest -f
            done
          fi

      - name: Build and push API image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker build -t $REGISTRY/$API_IMAGE_NAME:$IMAGE_TAG ./api
          docker push $REGISTRY/$API_IMAGE_NAME:$IMAGE_TAG

      - name: Build and push Frontend image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker build -t $REGISTRY/$FRONTEND_IMAGE_NAME:$IMAGE_TAG ./frontend
          docker push $REGISTRY/$FRONTEND_IMAGE_NAME:$IMAGE_TAG
