name: Build and Push API + Frontend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: "vakaden"
  IMAGE_NAME: "app"  # Your container name

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Delete old images in repository
        run: |
          # Delete all tags
          for tag in $(doctl registry repository list-tags ${{ env.REGISTRY }}/app --format "{{.Tag}}" --no-header); do
            if [ -n "$tag" ]; then
              echo "Deleting ${{ env.REGISTRY }}/app:$tag"
              doctl registry repository delete-tag ${{ env.REGISTRY }}/app $tag -f
            fi
          done
          
          # Delete all manifests
          for digest in $(doctl registry repository list-tags ${{ env.REGISTRY }}/app --format "{{.Digest}}" --no-header); do
            if [ -n "$digest" ] && [ "$digest" != "<nil>" ]; then
              echo "Deleting ${{ env.REGISTRY }}/app@$digest"
              doctl registry repository delete-manifest ${{ env.REGISTRY }}/app $digest -f
            fi
          done

      - name: Build and push API image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}-api
          docker build -t ${{ env.REGISTRY }}/app:$IMAGE_TAG-api -f ./api/Dockerfile ./api
          docker push ${{ env.REGISTRY }}/app:$IMAGE_TAG-api

      - name: Build and push Frontend image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}-frontend
          docker build -t ${{ env.REGISTRY }}/app:$IMAGE_TAG -f ./frontend/Dockerfile ./frontend
          docker push ${{ env.REGISTRY }}/app:$IMAGE_TAG
